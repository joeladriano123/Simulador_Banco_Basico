var _a;
var BankAccount = /** @class */ (function () {
    function BankAccount(initialBalance) {
        if (initialBalance === void 0) { initialBalance = 0; }
        this.transactions = [];
        this.nextId = 1;
        this.balance = initialBalance;
        this.updateBalanceUI();
    }
    BankAccount.prototype.deposit = function (amount) {
        if (amount > 0) {
            this.balance += amount;
            this.transactions.push({ id: this.nextId++, amount: amount, type: "deposit" });
            this.updateBalanceUI();
            this.renderTransactions();
        }
        else {
            alert("Ingrese una cantidad válida para depositar.");
        }
    };
    BankAccount.prototype.withdraw = function (amount) {
        if (amount > 0 && amount <= this.balance) {
            this.balance -= amount;
            this.transactions.push({ id: this.nextId++, amount: amount, type: "withdrawal" });
            this.updateBalanceUI();
            this.renderTransactions();
        }
        else {
            alert("Fondos insuficientes o cantidad inválida.");
        }
    };
    BankAccount.prototype.getBalance = function () {
        var balanceDisplay = document.getElementById("balanceDisplay");
        if (balanceDisplay) {
            balanceDisplay.textContent = "Saldo: $".concat(this.balance.toFixed(2));
            balanceDisplay.style.display = "block";
            setTimeout(function () {
                balanceDisplay.style.display = "none";
            }, 3000);
        }
    };
    BankAccount.prototype.updateBalanceUI = function () {
        var balanceElement = document.getElementById("balance");
        if (balanceElement) {
            balanceElement.textContent = "Saldo: $".concat(this.balance.toFixed(2));
        }
    };
    BankAccount.prototype.renderTransactions = function () {
        var transactionList = document.getElementById("transactionList");
        if (transactionList) {
            transactionList.innerHTML = "";
            this.transactions.forEach(function (transaction) {
                var li = document.createElement("li");
                li.textContent = "".concat(transaction.type === "deposit" ? "+" : "-", "$").concat(transaction.amount.toFixed(2));
                transactionList.appendChild(li);
            });
        }
    };
    return BankAccount;
}());
var account = new BankAccount();
(_a = document.getElementById("balanceIcon")) === null || _a === void 0 ? void 0 : _a.addEventListener("click", function () {
    account.getBalance();
});
function depositMoney() {
    var depositInput = document.getElementById("depositInput");
    var amount = parseFloat(depositInput.value);
    if (!isNaN(amount)) {
        account.deposit(amount);
        depositInput.value = "";
    }
}
function withdrawMoney() {
    var withdrawInput = document.getElementById("withdrawInput");
    var amount = parseFloat(withdrawInput.value);
    if (!isNaN(amount)) {
        account.withdraw(amount);
        withdrawInput.value = "";
    }
}
